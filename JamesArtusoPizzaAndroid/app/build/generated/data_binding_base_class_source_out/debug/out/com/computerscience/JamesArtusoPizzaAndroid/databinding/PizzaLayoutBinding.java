// Generated by view binder compiler. Do not edit!
package com.computerscience.JamesArtusoPizzaAndroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.computerscience.JamesArtusoPizzaAndroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PizzaLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final ConstraintLayout nyScreen;

  @NonNull
  public final Button orderButton;

  @NonNull
  public final ImageView pizzaImage;

  @NonNull
  public final ListView pizzaTypes;

  @NonNull
  public final TextView pizzaView;

  @NonNull
  public final Spinner sizeSpinner;

  @NonNull
  public final RecyclerView toppingsRecycler;

  private PizzaLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull Button backButton,
      @NonNull ConstraintLayout nyScreen, @NonNull Button orderButton,
      @NonNull ImageView pizzaImage, @NonNull ListView pizzaTypes, @NonNull TextView pizzaView,
      @NonNull Spinner sizeSpinner, @NonNull RecyclerView toppingsRecycler) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.nyScreen = nyScreen;
    this.orderButton = orderButton;
    this.pizzaImage = pizzaImage;
    this.pizzaTypes = pizzaTypes;
    this.pizzaView = pizzaView;
    this.sizeSpinner = sizeSpinner;
    this.toppingsRecycler = toppingsRecycler;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PizzaLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PizzaLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pizza_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PizzaLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      ConstraintLayout nyScreen = (ConstraintLayout) rootView;

      id = R.id.order_button;
      Button orderButton = ViewBindings.findChildViewById(rootView, id);
      if (orderButton == null) {
        break missingId;
      }

      id = R.id.pizza_image;
      ImageView pizzaImage = ViewBindings.findChildViewById(rootView, id);
      if (pizzaImage == null) {
        break missingId;
      }

      id = R.id.pizza_types;
      ListView pizzaTypes = ViewBindings.findChildViewById(rootView, id);
      if (pizzaTypes == null) {
        break missingId;
      }

      id = R.id.pizza_view;
      TextView pizzaView = ViewBindings.findChildViewById(rootView, id);
      if (pizzaView == null) {
        break missingId;
      }

      id = R.id.size_spinner;
      Spinner sizeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (sizeSpinner == null) {
        break missingId;
      }

      id = R.id.toppingsRecycler;
      RecyclerView toppingsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (toppingsRecycler == null) {
        break missingId;
      }

      return new PizzaLayoutBinding((ConstraintLayout) rootView, backButton, nyScreen, orderButton,
          pizzaImage, pizzaTypes, pizzaView, sizeSpinner, toppingsRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
